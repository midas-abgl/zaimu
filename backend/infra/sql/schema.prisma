generator kysely {
    provider            = "prisma-kysely"
    output              = "./kysely"
    fileName            = "types.ts"
    decimalTypeOverride = "number"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    company         String        @id @db.VarChar(70)
    events          Event[]
    transactionsIn  Transaction[] @relation("Transaction_destination")
    transactionsOut Transaction[] @relation("Transaction_origin")
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @default(now())
}

model Event {
    id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type            String   @db.VarChar(15)
    account         String   @db.VarChar(70)
    accountRelation Account  @relation(fields: [account], references: [company], onDelete: Cascade)
    amount          Decimal  @db.Decimal(8, 2)
    date            DateTime @db.Timestamptz()
    description     String?  @db.VarChar(1000)
    details         Json     @db.JsonB
    createdAt       DateTime @default(now())
    updatedAt       DateTime @default(now())
}

model Transaction {
    id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    amount             Decimal  @db.Decimal(8, 2)
    date               DateTime @db.Timestamptz()
    description        String?  @db.VarChar(1000)
    categories         String[] @db.VarChar(50)
    recurrence         String?  @db.VarChar(26)
    repeatCount        Int?     @db.SmallInt
    origin             String?  @db.VarChar(70)
    originAccount      Account? @relation("Transaction_origin", fields: [origin], references: [company], onDelete: Cascade)
    destination        String?  @db.VarChar(70)
    destinationAccount Account? @relation("Transaction_destination", fields: [destination], references: [company], onDelete: Cascade)
    createdAt          DateTime @default(now())
    updatedAt          DateTime @default(now())
}

model User {
    email     String   @id @db.VarChar(320)
    password  String   @db.VarChar(128)
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}
